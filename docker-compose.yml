version: "3.9"

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_EXTERNAL_PORT}:${REDIS_PORT}"
    restart: unless-stopped
    networks:
      - chat-network
    env_file:
      - .env

  auth_service:
    build: ./auth_service
    container_name: auth_service
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    volumes:
      - ./auth_service:/app
    env_file:
      - .env
    depends_on:
      - auth_postgres
      - redis
    restart: unless-stopped
    command: >
      sh -c "pip install -r requirements.txt &&
             python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:${AUTH_SERVICE_PORT}"
    networks:
      - chat-network

  chat_service:
    build: ./chat_service
    container_name: chat_service
    ports:
      - "${CHAT_SERVICE_PORT}:${CHAT_SERVICE_PORT}"
    expose:
      - "${CHAT_SERVICE_PORT}"
    volumes:
      - ./chat_service:/app
    env_file:
      - .env
    depends_on:
      - chat_postgres
      - redis
      - auth_service
    restart: unless-stopped
    command: >
      sh -c "pip install -r requirements.txt &&
             python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:${CHAT_SERVICE_PORT}"
    networks:
      - chat-network

  celery:
    build: ./auth_service
    container_name: celery
    depends_on:
      - redis
    volumes:
      - ./auth_service:/app
    env_file:
      - .env
    restart: unless-stopped
    command: >
      sh -c "pip install -r requirements.txt &&
              celery -A auth_service.celery worker --loglevel=info"
    networks:
      - chat-network

  auth_postgres:
    image: postgres:15
    container_name: auth_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${AUTH_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${AUTH_SERVICE_POSTGRES_PASSWORD}
      - POSTGRES_DB=${AUTH_SERVICE_POSTGRES_DB}
    ports:
      - "${AUTH_POSTGRES_EXTERNAL_PORT}:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - chat-network

  chat_postgres:
    image: postgres:15
    container_name: chat_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${CHAT_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${CHAT_SERVICE_POSTGRES_PASSWORD}
      - POSTGRES_DB=${CHAT_SERVICE_POSTGRES_DB}
    ports:
      - "${CHAT_POSTGRES_EXTERNAL_PORT}:5432"
    volumes:
      - chat_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - chat-network

volumes:
  auth_postgres_data:
  chat_postgres_data:

networks:
  chat-network:
    driver: bridge
